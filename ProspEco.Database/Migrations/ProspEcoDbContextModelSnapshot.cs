// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using ProspEco.Database;

#nullable disable

namespace ProspEco.Database.Migrations
{
    [DbContext(typeof(ProspEcoDbContext))]
    partial class ProspEcoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProspEco.Model.Entities.Aparelho", b =>
                {
                    b.Property<long>("IdAparelho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id_aparelho");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdAparelho"));

                    b.Property<string>("DsDescricao")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ds_descricao");

                    b.Property<string>("DsNome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ds_nome");

                    b.Property<string>("DsTipo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ds_tipo");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_modificacao");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("number(11)")
                        .HasColumnName("id_usuario");

                    b.Property<decimal>("VlPotencia")
                        .HasColumnType("number(11,2)")
                        .HasColumnName("vl_potencia");

                    b.HasKey("IdAparelho");

                    b.HasIndex("IdUsuario");

                    b.ToTable("prospecco_aparelhos");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.BandeiraTarifaria", b =>
                {
                    b.Property<long>("IdBandeira")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("number(11)")
                        .HasColumnName("id_bandeira");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdBandeira"));

                    b.Property<string>("DsTipoBandeira")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ds_tipo_bandeira");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_modificacao");

                    b.Property<DateTime>("DtVigencia")
                        .HasColumnType("date")
                        .HasColumnName("dt_vigencia");

                    b.HasKey("IdBandeira");

                    b.ToTable("prospecco_bandeiras_tarifarias");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Conquista", b =>
                {
                    b.Property<long>("IdConquista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("number(11)")
                        .HasColumnName("id_conquista");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdConquista"));

                    b.Property<string>("DsDescricao")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ds_descricao");

                    b.Property<string>("DsTitulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ds_titulo");

                    b.Property<DateTime>("DtConquista")
                        .HasColumnType("date")
                        .HasColumnName("dt_conquista");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_modificacao");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("number(11)")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdConquista");

                    b.HasIndex("IdUsuario");

                    b.ToTable("prospecco_conquistas");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Meta", b =>
                {
                    b.Property<long>("IdMeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("number(11)")
                        .HasColumnName("id_meta");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdMeta"));

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime>("DtFim")
                        .HasColumnType("date")
                        .HasColumnName("dt_fim");

                    b.Property<DateTime>("DtInicio")
                        .HasColumnType("date")
                        .HasColumnName("dt_inicio");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_modificacao");

                    b.Property<string>("FlAtingida")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("fl_atingida");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("number(11)")
                        .HasColumnName("id_usuario");

                    b.Property<decimal>("VlConsumoAlvo")
                        .HasColumnType("number(11,2)")
                        .HasColumnName("vl_consumo_alvo");

                    b.HasKey("IdMeta");

                    b.HasIndex("IdUsuario");

                    b.ToTable("prospecco_metas");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Notificacao", b =>
                {
                    b.Property<long>("IdNotificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("number(11)")
                        .HasColumnName("id_notificacao");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdNotificacao"));

                    b.Property<string>("DsMensagem")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ds_mensagem");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime>("DtHora")
                        .HasColumnType("date")
                        .HasColumnName("dt_hora");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_modificacao");

                    b.Property<string>("FlLida")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("fl_lida");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("number(11)")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdNotificacao");

                    b.HasIndex("IdUsuario");

                    b.ToTable("prospecco_notificacoes");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Recomendacao", b =>
                {
                    b.Property<long>("IdRecomendacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("number(11)")
                        .HasColumnName("id_recomendacao");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecomendacao"));

                    b.Property<string>("DsMensagem")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ds_mensagem");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime>("DtHora")
                        .HasColumnType("date")
                        .HasColumnName("dt_hora");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_modificacao");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("number(11)")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdRecomendacao");

                    b.HasIndex("IdUsuario");

                    b.ToTable("prospecco_recomendacoes");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.RegistroConsumo", b =>
                {
                    b.Property<long>("IdRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("number(11)")
                        .HasColumnName("id_registro");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRegistro"));

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime>("DtHora")
                        .HasColumnType("date")
                        .HasColumnName("dt_hora");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_modificacao");

                    b.Property<long>("IdAparelho")
                        .HasColumnType("number(11)")
                        .HasColumnName("id_aparelho");

                    b.Property<decimal>("VlConsumo")
                        .HasColumnType("number(11,2)")
                        .HasColumnName("vl_consumo");

                    b.HasKey("IdRegistro");

                    b.HasIndex("IdAparelho");

                    b.ToTable("prospecco_registros_consumo");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Usuario", b =>
                {
                    b.Property<long>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("number(11)")
                        .HasColumnName("id_usuario");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdUsuario"));

                    b.Property<string>("DsEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ds_email");

                    b.Property<string>("DsNome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ds_nome");

                    b.Property<string>("DsRole")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ds_role");

                    b.Property<string>("DsSenha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ds_senha");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_modificacao");

                    b.Property<decimal?>("VlPontuacaoEconomia")
                        .HasColumnType("number(11,2)")
                        .HasColumnName("vl_pontuacao_economia");

                    b.HasKey("IdUsuario");

                    b.ToTable("prospecco_usuarios");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Aparelho", b =>
                {
                    b.HasOne("ProspEco.Model.Entities.Usuario", "Usuario")
                        .WithMany("Aparelhos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Conquista", b =>
                {
                    b.HasOne("ProspEco.Model.Entities.Usuario", "Usuario")
                        .WithMany("Conquistas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Meta", b =>
                {
                    b.HasOne("ProspEco.Model.Entities.Usuario", "Usuario")
                        .WithMany("Metas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Notificacao", b =>
                {
                    b.HasOne("ProspEco.Model.Entities.Usuario", "Usuario")
                        .WithMany("Notificacoes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Recomendacao", b =>
                {
                    b.HasOne("ProspEco.Model.Entities.Usuario", "Usuario")
                        .WithMany("Recomendacoes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.RegistroConsumo", b =>
                {
                    b.HasOne("ProspEco.Model.Entities.Aparelho", "Aparelho")
                        .WithMany("RegistrosConsumo")
                        .HasForeignKey("IdAparelho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aparelho");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Aparelho", b =>
                {
                    b.Navigation("RegistrosConsumo");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Usuario", b =>
                {
                    b.Navigation("Aparelhos");

                    b.Navigation("Conquistas");

                    b.Navigation("Metas");

                    b.Navigation("Notificacoes");

                    b.Navigation("Recomendacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
