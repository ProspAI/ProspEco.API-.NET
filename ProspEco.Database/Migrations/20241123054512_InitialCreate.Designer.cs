// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using ProspEco.Database.Contexts;

#nullable disable

namespace ProspEco.Database.Migrations
{
    [DbContext(typeof(ProspEcoContext))]
    [Migration("20241123054512_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("RM551236")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProspEco.Model.Entities.Aparelho", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("nome");

                    b.Property<double>("Potencia")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("potencia");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("tipo");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Aparelhos", "RM551236");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.BandeiraTarifaria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataVigencia")
                        .HasColumnType("date")
                        .HasColumnName("data_vigencia");

                    b.Property<string>("TipoBandeira")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("tipo_bandeira");

                    b.HasKey("Id");

                    b.HasIndex("DataVigencia")
                        .HasDatabaseName("IX_BandeiraTarifaria_DataVigencia");

                    b.ToTable("bandeiras_tarifarias", "dbo");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Conquista", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataConquista")
                        .HasColumnType("datetime")
                        .HasColumnName("data_conquista");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("descricao");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("titulo");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Conquistas", "RM551236");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Meta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Atingida")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("atingida");

                    b.Property<decimal>("ConsumoAlvo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("consumo_alvo");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("date")
                        .HasColumnName("data_fim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("date")
                        .HasColumnName("data_inicio");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("metas", "dbo");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Notificacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime")
                        .HasColumnName("data_hora");

                    b.Property<bool>("Lida")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("lida");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("mensagem");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("notificacoes", "dbo");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Recomendacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime")
                        .HasColumnName("data_hora");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)")
                        .HasColumnName("mensagem");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("recomendacoes", "dbo");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.RegistroConsumo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AparelhoId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("aparelho_id");

                    b.Property<decimal>("Consumo")
                        .HasColumnType("float")
                        .HasColumnName("consumo");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime")
                        .HasColumnName("data_hora");

                    b.HasKey("Id");

                    b.HasIndex("AparelhoId");

                    b.ToTable("registros_consumo", "dbo");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("nome");

                    b.Property<double?>("PontuacaoEconomia")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("pontuacao_economia");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("role");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("senha");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios", "RM551236");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Aparelho", b =>
                {
                    b.HasOne("ProspEco.Model.Entities.Usuario", "Usuario")
                        .WithMany("Aparelhos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Conquista", b =>
                {
                    b.HasOne("ProspEco.Model.Entities.Usuario", "Usuario")
                        .WithMany("Conquistas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Meta", b =>
                {
                    b.HasOne("ProspEco.Model.Entities.Usuario", "Usuario")
                        .WithMany("Metas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Notificacao", b =>
                {
                    b.HasOne("ProspEco.Model.Entities.Usuario", "Usuario")
                        .WithMany("Notificacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Recomendacao", b =>
                {
                    b.HasOne("ProspEco.Model.Entities.Usuario", "Usuario")
                        .WithMany("Recomendacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.RegistroConsumo", b =>
                {
                    b.HasOne("ProspEco.Model.Entities.Aparelho", "Aparelho")
                        .WithMany("RegistrosConsumo")
                        .HasForeignKey("AparelhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aparelho");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Aparelho", b =>
                {
                    b.Navigation("RegistrosConsumo");
                });

            modelBuilder.Entity("ProspEco.Model.Entities.Usuario", b =>
                {
                    b.Navigation("Aparelhos");

                    b.Navigation("Conquistas");

                    b.Navigation("Metas");

                    b.Navigation("Notificacoes");

                    b.Navigation("Recomendacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
